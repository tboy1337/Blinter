[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --timeout=300
    --timeout-method=thread
    --cov=blinter
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=90.0
    --cov-branch
    --durations=10
    --maxfail=1
    --no-cov-on-fail

# Parallel execution
# Uncomment the following line to run tests in parallel
# -n logical

# Output options
console_output_style = progress
junit_family = xunit2
junit_logging = all
log_level = INFO
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_file = tests/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s (%(filename)s:%(lineno)d)
log_file_date_format = %Y-%m-%d %H:%M:%S

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    smoke: marks tests as smoke tests
    regression: marks tests as regression tests
    parametrize: marks tests as parametrized
    skip_on_windows: skip test on Windows platform
    skip_on_linux: skip test on Linux platform
    skip_on_macos: skip test on macOS platform
    network: marks tests that require network access
    database: marks tests that require database access
    external: marks tests that require external services
    performance: marks tests that measure performance
    security: marks tests that check security aspects
    api: marks tests for API functionality
    cli: marks tests for CLI functionality
    gui: marks tests for GUI functionality

# Filters and warnings
filterwarnings =
    error
    ignore::DeprecationWarning:.*
    ignore::PendingDeprecationWarning:.*
    # Ignore encoding warnings during testing - these are expected when testing various encodings
    ignore:File.*was read using.*encoding instead of UTF-8.*:UserWarning:blinter

# Minimum version requirements
minversion = 8.0

# Cache
cache_dir = .pytest_cache

# Test collection timeout (useful for hanging tests)
collect_timeout = 60

# Asyncio configuration
asyncio_mode = auto

# Coverage configuration (additional to .coveragerc)
# These options supplement the main coverage configuration
cov_context = test
cov_config = .coveragerc

# HTML report options
htmlpath = htmlcov/index.html

# XML report options
xmlpath = coverage.xml

# JSON report options  
json_report_file = report.json

# Benchmark options
benchmark_only = false
benchmark_sort = mean
benchmark_min_time = 0.000005
benchmark_max_time = 1.0
benchmark_min_rounds = 5
benchmark_timer = perf_counter
benchmark_disable_gc = false
benchmark_skip = false
benchmark_warmup = false
benchmark_warmup_iterations = 100000
benchmark_json = benchmark.json
benchmark_histogram = benchmark_histogram.svg

# Hypothesis configuration
hypothesis_profile = default
