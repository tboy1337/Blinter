name: "Build-Release-PYPI"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
permissions:
  contents: write
  id-token: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Create virtual environment
        run: |
          python -m venv venv
      - name: Install dependencies in virtual environment
        run: |
          .\venv\Scripts\Activate.ps1
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade wheel
          python -m pip install --upgrade pyinstaller
          python -m pip install --upgrade -r requirements.txt
        shell: pwsh
      - name: Generate version info file
        run: |
          $versionLine = Select-String -Path blinter.py -Pattern '__version__ = "(.+)"'
          $version = $versionLine.Matches.Groups[1].Value
          $versionParts = $version.Split('.')
          $major = $versionParts[0]
          $minor = $versionParts[1]
          $patch = $versionParts[2]
          @"
          VSVersionInfo(
            ffi=FixedFileInfo(
              filevers=($major, $minor, $patch, 0),
              prodvers=($major, $minor, $patch, 0),
              mask=0x3f,
              flags=0x0,
              OS=0x40004,
              fileType=0x1,
              subtype=0x0,
              date=(0, 0)
            ),
            kids=[
              StringFileInfo([
                StringTable(
                  u'040904B0',
                  [StringStruct(u'CompanyName', u'tboy1337'),
                  StringStruct(u'FileDescription', u'Blinter - Professional Batch File Linter for Windows'),
                  StringStruct(u'FileVersion', u'$version'),
                  StringStruct(u'InternalName', u'Blinter'),
                  StringStruct(u'LegalCopyright', u'\xa9 2025 tboy1337. Licensed under CRL.'),
                  StringStruct(u'OriginalFilename', u'Blinter.exe'),
                  StringStruct(u'ProductName', u'Blinter'),
                  StringStruct(u'ProductVersion', u'$version')])
              ]),
              VarFileInfo([VarStruct(u'Translation', [1033, 1200])])
            ]
          )
          "@ | Out-File -FilePath file_version_info.txt -Encoding utf8
        shell: pwsh
      - name: Build executable
        run: |
          .\venv\Scripts\Activate.ps1
          pyinstaller Blinter.spec
        shell: pwsh
      - name: Rename executable
        run: |
          Rename-Item -Path dist/Blinter.exe -NewName Blinter-v1.0.${{ github.run_number }}-windows.exe
        shell: pwsh
      - name: Zip the exe
        run: |
          Compress-Archive -Path "dist/Blinter-v1.0.${{ github.run_number }}-windows.exe" -DestinationPath "dist/Blinter-v1.0.${{ github.run_number }}-windows.zip"
        shell: pwsh
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/Blinter-v1.0.${{ github.run_number }}-windows.zip

  build-wheels:
    name: Build Python wheels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade wheel
          python -m pip install --upgrade build

      - name: Build pure Python wheel and sdist
        run: |
          python -m build

      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-dist
          path: dist/

  create-release:
    needs: [build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download Windows build
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: ./build
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./build/Blinter-v1.0.${{ github.run_number }}-windows.zip
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          removeArtifacts: true

  publish-pypi:
    name: Publish wheels to PyPI
    needs: build-wheels
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-dist
          path: dist

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Twine
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade wheel
          python -m pip install --upgrade twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_BLINTER }}
        run: |
          twine check dist/*
          twine upload dist/*
